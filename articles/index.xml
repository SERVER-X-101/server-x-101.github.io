<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on SERVER-X-101</title>
    <link>https://server-x-101.github.io/articles/</link>
    <description>Recent content in Articles on SERVER-X-101</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Mar 2024 08:36:36 -0700</lastBuildDate>
    <atom:link href="https://server-x-101.github.io/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ultimate Web Development Resources</title>
      <link>https://server-x-101.github.io/articles/ultimate-web-development-resources/</link>
      <pubDate>Tue, 12 Mar 2024 08:36:36 -0700</pubDate>
      <guid>https://server-x-101.github.io/articles/ultimate-web-development-resources/</guid>
      <description>A collection of Web Developement Resources at one place&#xA;Table of Contents Table of Contents Web Development Roadmaps Web design softwares Prototyping tools for UI/UX Free Hosting Websites to learn Websites for code challenges Web Images or Photos Web Color Palettes Chrome Extensions For Web Developers Chart Visualizations Web Illustrations Web fonts Website Optimization Tools Interview Preparation Free Website Templates For Inspiration Website Copier HTML Learning Resources CSS Learning Resources JS Learning Resources Let&amp;rsquo;s pick a framework/library for you Bio Links Github Student Developer Pack Resources Website for Project Management and Notes User Authentication Animations and Graphics Awesome CSS generators Free YouTube resources Code Playgrounds Top React Component Libraries Top JavaScript Libraries Top JavaScript Frameworks Top JavaScript Runtime Top JavaScript Frameworks Backend List Of Projects Web For Testing and Check The Security Score Web Development Roadmaps Frontend Development Backend Development FullStack Development Web design softwares Adobe Dreamweaver Rapidweaver Coffeecup HTML Editor VsCode Wix Zeplin Figma InVision Sketch Webflow Lunacy Origami FluidUI Vectr Prototyping tools for UI/UX Figma Invision AdobeXD Canva Sketch Webflow Justinmind Fluid UI Framer Penpot Balsamiq Wireframing Axure RP Origami Studio Free Hosting Vercel Amazon Byethost 000webhost Netlify Firebase Gitlab Github glitch pagecloud Render Surge Wix cyclic InfinityFree Deta Railway Supabase Glitch Fleek ByetHost Strikingly WordPress Weebly Jimdo AwardSpace Anglefire Neocities Tripod uCoz FreeHostingEU u Host Full Freehostia 000webhost.</description>
    </item>
    <item>
      <title>DSA Mastery</title>
      <link>https://server-x-101.github.io/articles/dsa-mastery/</link>
      <pubDate>Tue, 27 Feb 2024 08:36:36 -0700</pubDate>
      <guid>https://server-x-101.github.io/articles/dsa-mastery/</guid>
      <description>DSA Mastery in 9 Weeks: Read, Solve, Code!&#xA;Data Structures and Algorithms Roadmap Five steps to Mastering DSA Mastering DSA as a beginner is simplified into 5 steps:&#xA;Choose a programming language. Understand time and space complexities. Learn basic data structures and algorithms. Practice a lot. Join competitions to get really good. INDEX 1. Master at least one Programming Language&#xD;2. Understand Complexities&#xD;3. Learn essential Data Structures and Algorithms&#xD;3.</description>
    </item>
    <item>
      <title>Three Js A Resourceful Guide</title>
      <link>https://server-x-101.github.io/articles/three-js-guide/</link>
      <pubDate>Tue, 27 Feb 2024 08:36:36 -0700</pubDate>
      <guid>https://server-x-101.github.io/articles/three-js-guide/</guid>
      <description>Welcome to the exciting realm of Three.js - a dynamic JavaScript library empowering developers to craft mesmerizing 3D graphics for the web effortlessly. Whether you&amp;rsquo;re taking your first steps or you&amp;rsquo;re an experienced hand, Three.js offers a myriad of tools and resources to unleash your creativity and bring your visions to life.&#xA;Core Resources ThreeJS Official Website: Your go-to destination for all things Three.js. Delve into documentation, explore examples, and kickstart your 3D projects.</description>
    </item>
    <item>
      <title>Sieve of Eratosthenes Algorithm</title>
      <link>https://server-x-101.github.io/articles/sieve-of-eratosthenes/</link>
      <pubDate>Tue, 13 Feb 2024 22:08:13 -0700</pubDate>
      <guid>https://server-x-101.github.io/articles/sieve-of-eratosthenes/</guid>
      <description>The Sieve of Eratosthenes is an ancient algorithm used to find all prime numbers up to a specified integer. It works by iteratively marking the multiples of each prime number starting from 2 as composite (not prime). After iterating through all numbers up to the square root of the limit, the remaining unmarked numbers are primes.&#xA;Python Implementation file_type_python&#xD;sieve_of_eratosthenes.py def sieve_of_eratosthenes(limit): primes = [True] * (limit + 1) primes[0] = primes[1] = False p = 2 while p * p &amp;lt;= limit: # If primes[p] is not changed, then it is a prime if primes[p]: # Update all multiples of p starting from p^2 for i in range(p * p, limit + 1, p): primes[i] = False p += 1 prime_numbers = [] for i in range(2, limit + 1): if primes[i]: prime_numbers.</description>
    </item>
    <item>
      <title>Tarjan&#39;s Algorithm</title>
      <link>https://server-x-101.github.io/articles/tarjans-algorithm/</link>
      <pubDate>Fri, 02 Feb 2024 22:08:13 -0700</pubDate>
      <guid>https://server-x-101.github.io/articles/tarjans-algorithm/</guid>
      <description>A directed graph exhibits strong connectivity when every pair of vertices is connected by a path. A strongly connected component (SCC) within such a graph is a largest subgraph where every vertex is reachable from every other vertex. For instance, in the given graph, there are three SCCs.&#xA;Algorithm:&#xA;Tarjan&amp;rsquo;s algorithm utilizes DFS (Depth First Search) traversal. It maintains three arrays: disc[] to store discovery time of vertices, low[] to store the earliest visited vertex reachable from subtree rooted with current vertex, and stackMember[] to keep track of vertices present in the stack.</description>
    </item>
  </channel>
</rss>
